#!/bin/bash

bin_ant=ant.bzip2
bin_arm_tools=arm-tools.bzip2
bin_ndk=ndk.bzip2

if [ "$1" = "install" ]
then
  echo "Welcome to (Ch)rome OS (A)ndroid (S)DK/(N)DK\n\
----------------------------------------------------------\n"


  # bashrc
  echo 'export chasn=/usr/local/chasn #chasn' >> ~/.bashrc

  echo "export PATH=$PATH:$chasn/ant/bin:$chasn/ndk:$chasn/tools #chasn" >> ~/.bashrc
  echo "export ANDROID_HOME=$chasn #chasn" >> ~/.bashrc
  echo "export ANDROID_SWT=$chasn/tools/lib/arm #chasn" >> ~/.bashrc
  echo 'export NDK_KNOWN_ABIS="armeabi-v7a armeabi-v7a-hard armeabi" #chasn' >> ~/.bashrc
  echo 'export NDK_KNOWN_ARCHS="arm x86" #chasn' >> ~/.bashrc
  echo 'export HOST_ARCH="arm" #chasn' >> ~/.bashrc

  echo "alias chasn='sh $chasn/chasn.sh' #chasn" >> ~/.bashrc
  echo "alias sdkmanager='$chasn/tools/bin/sdkmanager --sdk_root=$chasn' #chasn" >> ~/.bashrc
  echo "alias android='$chasn/tools/android' #chasn" >> ~/.bashrc
  echo "alias ant='$chasn/ant/bin/ant' #chasn" >> ~/.bashrc

  #current shell
  export chasn=/usr/local/chasn

  export ANDROID_HOME=$chasn
  export ANDROID_SWT=$chasn/tools/lib/arm
  export NDK_KNOWN_ABIS="armeabi-v7a armeabi-v7a-hard armeabi"
  export NDK_KNOWN_ARCHS="arm x86"
  export HOST_ARCH="arm"

  alias chasn="sh $chasn/chasn"
  alias sdkmanager="$chasn/tools/bin/sdkmanager --sdk_root=$chasn/"
  alias android="$chasn/tools/android"
  alias ant="$chasn/ant/bin/ant" #chasn

  export PATH=$PATH:$chasn/ant/bin:$chasn/ndk:$chasn/tools

  echo "INSTALLED: bashrc\n"
 
  echo "EXTRACTING: ant"
  tar -xjf $chasn/.bin/$bin_ant --directory $chasn
  echo "EXTRACTED: ant"
  echo "EXTRACTING: arm-tools"
  tar -xjf $chasn/.bin/$bin_arm_tools --directory $chasn && mv $chasn/arm-build-tools $chasn/tools;
  echo "EXTRACTED: arm-tools"
  echo "EXTRACTING: ndk"
  tar -xjf $chasn/.bin/$bin_ndk --directory $chasn
  echo "EXTRACTED: ndk"

  ln -s $chasn/tools $chasn/build-tools/25.2.2

  exit 0;
fi

if [ "$1" = "remove" ]
then
  cp ~/.bashrc ~/.bashrc_backup
  sed '/#chasn/,/^/d' < ~/.bashrc_backup > ~/.bashrc

  rm -r /usr/local/chasn
  echo "removed."

  exit 0;
fi

if [ "$1" = "adb" ]
then
  if [ -d /usr/local/chasn ]
  then
    sh $chasn/adb-setup.sh
    echo "ADB is ready for use."

    exit 0;
  fi
fi

if [ ! -d /usr/local/chasn ]
then
  git clone https://github.com/hnerv/chasn /usr/local/chasn;
  mkdir -p /usr/local/chasn/build-tools;
  mkdir -p /usr/local/chasn/.bin

  echo "INSTALLED: directory";
fi

chasn=/usr/local/chasn

touch $chasn/gcokie

echo "Please wait. Downloading files."

# binaries
ggURL='https://drive.google.com/uc?export=download'  

echo "DOWNLOADING: ant"
ggID='0B3WqEY74PP5AS0ducmFxMlBNSUk' # ant
filename="$(curl -sc $chasn/gcokie "${ggURL}&id=${ggID}" | grep -o '="uc-name.*</span>' | sed 's/.*">//;s/<.a> .*//')"
getcode="$(awk '/_warning_/ {print $NF}' $chasn/gcokie)"  
curl -Lb $chasn/gcokie "${ggURL}&confirm=${getcode}&id=${ggID}" -o "${chasn}/.bin/${bin_ant}"

echo "DOWNLOADING: arm-tools"
ggID='0B3WqEY74PP5AZ3E5ekR4cTZCNFE' # arm-tools
filename="$(curl -sc $chasn/gcokie "${ggURL}&id=${ggID}" | grep -o '="uc-name.*</span>' | sed 's/.*">//;s/<.a> .*//')"
getcode="$(awk '/_warning_/ {print $NF}' $chasn/gcokie)"  
curl -Lb $chasn/gcokie "${ggURL}&confirm=${getcode}&id=${ggID}" -o "${chasn}/.bin/${bin_arm_tools}"

echo "DOWNLOADING: ndk"
ggID='0B3WqEY74PP5AZ3ZjVjRjVWZObVE' # ndk
filename="$(curl -sc $chasn/gcokie "${ggURL}&id=${ggID}" | grep -o '="uc-name.*</span>' | sed 's/.*">//;s/<.a> .*//')"
getcode="$(awk '/_warning_/ {print $NF}' $chasn/gcokie)"  
curl -Lb $chasn/gcokie "${ggURL}&confirm=${getcode}&id=${ggID}" -o "${chasn}/.bin/${bin_ndk}"

echo "Finished Downloading."

rm $chasn/gcokie

sh $chasn/chasn install

exit 0;
